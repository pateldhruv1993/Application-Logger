FEATURES:

- (?) Make the log be in json
- Add functionality so that the app does not consider user idle if he is watching a video or something for mroe than 10 mins.
	NOTE: You could find out how windows figures out that user is on a full screen app and hence doesnt put the computer to sleep.
- Add up focus time (may be store it in an array so that we know when user alt+tabbed out of it and then got back in again AND as total focus time)
	each time the app runs to get total window focus time and inactive time.
- Find a way to log "app::started" and "app:stop" for other Apps
	NOTE: Inside getCurrentUserProcess() in LoggingManager.cs you get a list of all the processes. You can use that list to add each process to another list whenever an app comes to focus for the first time.
	And then check if that process ID still exists in the Systems processes list on each tick
	DIARY: Looks like its done but needs a bit of testing. Also need to find a way to log app::ended. Currently as we know which PID ended because we maintain a list of those but we also need to relate that
		to the process logged in the file.
- Make reading from tcp stream less frequent (save POWAH)
	NOTE: Even though there is some basic stuff in the code that makes reading stream less frequent; you might want to remove that stuff in case you make the app multithreaded... or not if you still wanna skip
			cycles
- Have an initial handshake between TCP server and yourself so that you don't read some other apps data
- Make stuff multithreaded if you care about the lag while dragging, resizing etc..
	NOTE: The IPC/TCP code inside onTimer() produces more lag than the fact that we have a timer on main thread of the app. So you might want to process atleast the IPC stuff on thread
	NOTE 2: Seems like the UI lag is almost unnoticable when the app is actually connected to the TCP server for IPC. The app only lags when it tries to connect to the server and "times out ??"
			So you might not want to do multi threading at all

✓ Make server and Port for the TCP server editable in config (.cfg) file
✓ Make a FIFO list of configurable lenght that will store log lines and won't "null" the list upon log saving. This is so that other apps can make requests such as "Give me last 5 entires"
✓ Find a way to log "start" and "end" of Logger
✓ Connect with the node app using TCP to communicate with it
✓ Add some more UI elements to the form so you can show debug info and Application log in two different text labels
✓ Add code so that the app try to reconnect again after a while in case it couldnt establish a connection the first time



CHECK LIST FOR RELEASE:

- Organize code and move some of it to the new DataManger.cs
- Turn "Run on Startup" to TRUE in App.config  